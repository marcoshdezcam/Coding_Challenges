class Node  attr_accessor :value, :next_node  def initialize(value, next_node = nil)	@value = value    @next_node = next_node  endendclass LinkedList  attr_accessor :value, :next_node  def initialize    @head = nil    @tail = nil  end  def add(number)    new_node = Node.new(number)    if @head == nil      @head = @tail = new_node    else      @tail.next_node = new_node      @tail = new_node    end  end  def get(index)    if index >= 0      current_node = @head      index.times { |item| current_node = current_node.next_node }      current_node.value    else      nil    end  endendlist = LinkedList.newlist.add(3)list.add(5)puts list.get(1)